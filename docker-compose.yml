version: "3.8"
services:
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    ports: ["5432:5432"]
  neo4j:
    image: neo4j:5
    environment: ["NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASS}"]
    volumes: ["neo4j_data:/data"]
    healthcheck:
      test: ["CMD","cypher-shell","-u","${NEO4J_USER}","-p","${NEO4J_PASS}","RETURN 1;"]
      interval: 10s
      timeout: 5s
      retries: 20
    ports: ["7474:7474","7687:7687"]
  api:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASS=${NEO4J_PASS}
      - CORS_ORIGINS=*
      - API_TOKEN=${API_TOKEN}
    depends_on:
      postgres: {condition: service_healthy}
      neo4j: {condition: service_healthy}
    ports: ["8081:8081"]
  frontend:
    build: ./frontend
    environment:
      - VITE_API_BASE=http://api:8081
      - VITE_REQUIRE_TOKEN=true
    depends_on: {api: {condition: service_started}}
    ports: ["5173:5173"]
volumes: { pg_data: {}, neo4j_data: {} }
